#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"



piece  base, top, bottom, center,missile,firept;

lua_checkAllowFiring() { return 0; }
lua_checkLockTarget() { return 0; }


Create()
{
	turn firept to x-axis <-90> now;
	return (0);
}

AimFromPrimary(piecenum)
{
	piecenum = firept;
	return;
}

QueryPrimary(piecenum)
{
	piecenum = firept;
	return;
}

AimPrimary(heading,pitch,canFire)
{
	// overkill prevention check
	canFire = (get GAME_FRAME) - (get WEAPON_RELOADSTATE(1)) > 0;
	if (canFire) {
		call-script lua_checkAllowFiring(1,(get TARGET_ID(1)),LOCK_INCENDIARY);
		canFire = get LUA1;
	}
	if (!canFire) {
		return (0);
	}

	return(1);
}

FirePrimary()
{
	call-script lua_checkLockTarget(get TARGET_ID(1),LOCK_INCENDIARY);
	hide missile;
	emit-sfx 1024 from firept;
	sleep 300;
	// selfdestruct after firing
	get KILL_UNIT((get MY_ID),TRUE,FALSE);
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = top;
	return (0);
}

Killed(severity, corpsetype)
{
	explode top type SHATTER | EXPLODE_ON_HIT | BITMAP3;
	explode bottom type SHATTER | EXPLODE_ON_HIT | BITMAP3;
	return (3);
}
