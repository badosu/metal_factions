#define TAK			// This is a TAK script

#include "sfxtype.h"
#include "exptype.h"

#define SPEEDUP_FACTOR 300

#define HEADING_TOLERANCE	<25>
#define PITCH_TOLERANCE		<15>

piece  hips, body,leg1,bleg,leg2,bleg2,leg3,bleg3,leg4,bleg4, top, jumpback,ljumpjets,rjumpjets,rbjetpt,rfjetpt,lbjetpt,lfjetpt;

static-var  bMoving, hasJumped;


#include "jumpvars.h"


showJumpGear() {
	show jumpback;
	show ljumpjets;
	show rjumpjets;
}

hideJumpGear() {
	hide jumpback;
	hide ljumpjets;
	hide rjumpjets;
}

showJumpEffects(descending, frames) {
	if (descending) {
		emit-sfx 1024+4 from lfjetpt;
		emit-sfx 1024+4 from rfjetpt;
		emit-sfx 1024+3 from lbjetpt;
		emit-sfx 1024+3 from rbjetpt;
		if (frames == JUMP_SND_FRAMES) {
			play-sound( "jumpdesc", 1 );
		}
		
		// jump descending pose
		turn leg1 to x-axis <-15.000000> speed <60.000000>;
		turn leg2 to x-axis <15.000000> speed <60.000000>;
		turn leg3 to x-axis <15.000000> speed <60.000000>;
		turn leg4 to x-axis <-15.000000> speed <60.000000>;
		turn leg1 to y-axis <45.000000> speed <60.000000>;
		turn leg2 to y-axis <-45.000000> speed <60.000000>;
		turn leg3 to y-axis <45.000000> speed <60.000000>;
		turn leg4 to y-axis <-45.000000> speed <60.000000>;
		turn leg1 to z-axis <-15.000000> speed <60.000000>;
		turn leg2 to z-axis <15.000000> speed <60.000000>;
		turn leg3 to z-axis <15.000000> speed <60.000000>;
		turn leg4 to z-axis <-15.000000> speed <60.000000>;
	} else {
		if (frames == 0 ) {
			play-sound( "jumpstart", 1 );
		} else {
			if (frames == JUMP_SND_FRAMES) {
				play-sound( "jumpasc", 1 );
			}
		}
		emit-sfx 1024+2 from lfjetpt;
		emit-sfx 1024+2 from rfjetpt;
		emit-sfx 1024+1 from lbjetpt;
		emit-sfx 1024+1 from rbjetpt;

		// jump ascending pose
		turn leg1 to x-axis <0.000000> speed <60.000000>;
		turn leg2 to x-axis <0.000000> speed <60.000000>;
		turn leg3 to x-axis <0.000000> speed <60.000000>;
		turn leg4 to x-axis <0.000000> speed <60.000000>;
		turn leg1 to y-axis <25.000000> speed <60.000000>;
		turn leg2 to y-axis <-25.000000> speed <60.000000>;
		turn leg3 to y-axis <25.000000> speed <60.000000>;
		turn leg4 to y-axis <-25.000000> speed <60.000000>;
		turn leg1 to z-axis <0.000000> speed <60.000000>;
		turn leg2 to z-axis <0.000000> speed <60.000000>;
		turn leg3 to z-axis <0.000000> speed <60.000000>;
		turn leg4 to z-axis <0.000000> speed <60.000000>;
		
	}
}

#include "jump.h"


walk()
{
	if (isJumping) {
		sleep 100;
		return;
	}
	if( bMoving )
	{
		/* X */
		turn hips to x-axis <-1.000000> speed <20.000000> * SPEEDUP_FACTOR / 100;
			
		/* Y */
		turn leg4 to y-axis <-80.000000> speed <260.000000> * SPEEDUP_FACTOR / 100;

		turn leg2 to y-axis <-35.000000> speed <120.000000> * SPEEDUP_FACTOR / 100;

		turn leg3 to y-axis <5.000000> speed <140.000000> * SPEEDUP_FACTOR / 100;
		
		turn leg1 to y-axis <25.000000> speed <260.000000> * SPEEDUP_FACTOR / 100;

		/* Z */
		turn bleg4 to z-axis <-20.000000> speed <260.000000> * SPEEDUP_FACTOR / 100;
		turn bleg to z-axis <-20.000000> speed <260.000000> * SPEEDUP_FACTOR / 100;
		turn hips to z-axis <3.000000> speed <20.000000> * SPEEDUP_FACTOR / 100;

		/* move */
		move hips to x-axis [-0.2500000] speed [2.000000] * SPEEDUP_FACTOR / 100;
		move hips to z-axis [-0.2500000] speed [2.000000] * SPEEDUP_FACTOR / 100;
		
		
		turn leg4 to z-axis <-20.000000> speed <200.000000> * SPEEDUP_FACTOR / 100;
		sleep 100 * 100 / SPEEDUP_FACTOR;
		turn leg4 to z-axis <0.000000> speed <200.000000> * SPEEDUP_FACTOR / 100;
		sleep 100 * 100 / SPEEDUP_FACTOR;

	}
	if( bMoving )
	{
		/* X */
		turn hips to x-axis <1.000000> speed <20.000000> * SPEEDUP_FACTOR / 100;
		
		/* Y */
		turn leg4 to y-axis <-35.000000> speed <200.000000> * SPEEDUP_FACTOR / 100;

		turn leg2 to y-axis <-90.000000> speed <180.000000> * SPEEDUP_FACTOR / 100;

		turn leg3 to y-axis <15.000000> speed <140.000000> * SPEEDUP_FACTOR / 100;
		
		turn leg1 to y-axis <-5.000000> speed <200.000000> * SPEEDUP_FACTOR / 100;

		/* Z */
		turn bleg4 to z-axis <0.000000> speed <260.000000> * SPEEDUP_FACTOR / 100;
		turn bleg to z-axis <0.000000> speed <260.000000> * SPEEDUP_FACTOR / 100;
		turn hips to z-axis <3.000000> speed <20.000000> * SPEEDUP_FACTOR / 100;
		
		/* move */
		move hips to x-axis [0.000000] speed [2.000000] * SPEEDUP_FACTOR / 100;
		move hips to z-axis [0.000000] speed [2.000000] * SPEEDUP_FACTOR / 100;
		
		turn leg1 to z-axis <-20.000000> speed <200.000000> * SPEEDUP_FACTOR / 100;
		sleep 100 * 100 / SPEEDUP_FACTOR;
		turn leg1 to z-axis <0.000000> speed <200.000000> * SPEEDUP_FACTOR / 100;
		sleep 100 * 100 / SPEEDUP_FACTOR;

	}
	if( bMoving )
	{
		/* X */
		turn hips to x-axis <-1.000000> speed <20.000000> * SPEEDUP_FACTOR / 100;

		/* Y */
		turn leg4 to y-axis <-5.000000> speed <140.000000> * SPEEDUP_FACTOR / 100;

		turn leg2 to y-axis <-25.000000> speed <260.000000> * SPEEDUP_FACTOR / 100;

		turn leg3 to y-axis <80.000000> speed <260.000000> * SPEEDUP_FACTOR / 100;
		
		turn leg1 to y-axis <35.000000> speed <120.000000> * SPEEDUP_FACTOR / 100;

		/* Z */
		turn bleg2 to z-axis <20.000000> speed <260.000000> * SPEEDUP_FACTOR / 100;
		turn bleg3 to z-axis <20.000000> speed <260.000000> * SPEEDUP_FACTOR / 100;
		turn hips to z-axis <-3.000000> speed <20.000000> * SPEEDUP_FACTOR / 100;


		/* move */
		move hips to x-axis [0.2500000] speed [2.000000] * SPEEDUP_FACTOR / 100;
		move hips to z-axis [-0.2500000] speed [2.000000] * SPEEDUP_FACTOR / 100;
		
		turn leg3 to z-axis <20.000000> speed <200.000000> * SPEEDUP_FACTOR / 100;
		sleep 100 * 100 / SPEEDUP_FACTOR;
		turn leg3 to z-axis <0.000000> speed <200.000000> * SPEEDUP_FACTOR / 100;
		sleep 100 * 100 / SPEEDUP_FACTOR;

	}
	if( bMoving )
	{
		turn hips to x-axis <1.000000> speed <20.000000> * SPEEDUP_FACTOR / 100;

		/* Y */
		turn leg4 to y-axis <-15.000000> speed <140.000000> * SPEEDUP_FACTOR / 100;

		turn leg2 to y-axis <5.000000> speed <200.000000> * SPEEDUP_FACTOR / 100;

		turn leg3 to y-axis <35.000000> speed <200.000000> * SPEEDUP_FACTOR / 100;

		turn leg1 to y-axis <90.000000> speed <180.000000> * SPEEDUP_FACTOR / 100;			

		/* Z */
		turn bleg3 to z-axis <0.000000> speed <260.000000> * SPEEDUP_FACTOR / 100;
		turn bleg2 to z-axis <0.000000> speed <260.000000> * SPEEDUP_FACTOR / 100;
		turn hips to z-axis <3.000000> speed <20.000000> * SPEEDUP_FACTOR / 100;

		/* move */
		move hips to x-axis [0.000000] speed [2.000000] * SPEEDUP_FACTOR / 100;
		move hips to z-axis [0.000000] speed [2.000000] * SPEEDUP_FACTOR / 100;

		turn leg2 to z-axis <20.000000> speed <200.000000> * SPEEDUP_FACTOR / 100;
		sleep 100 * 100 / SPEEDUP_FACTOR;
		turn leg2 to z-axis <0.000000> speed <200.000000> * SPEEDUP_FACTOR / 100;
		sleep 100 * 100 / SPEEDUP_FACTOR;
	}
}


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from body;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}



MotionControl(moving, justjumped, justmoved)
{
	justmoved = TRUE;
	justjumped = FALSE;
	while( TRUE )
	{
		moving = bMoving;


		if( moving )
		{
			call-script walk();
			justmoved = TRUE;
		}
		if (isJumping) 
		{
			justjumped = TRUE;
		}
		else 
		{
			if (justjumped)
			{
				justjumped = FALSE;
				turn leg1 to x-axis <0.000000> speed <360.000000>;
				turn leg2 to x-axis <0.000000> speed <360.000000>;
				turn leg3 to x-axis <0.000000> speed <360.000000>;
				turn leg4 to x-axis <0.000000> speed <360.000000>;
				turn leg1 to y-axis <45.000000> speed <360.000000>;
				turn leg2 to y-axis <-45.000000> speed <360.000000>;
				turn leg3 to y-axis <45.000000> speed <360.000000>;
				turn leg4 to y-axis <-45.000000> speed <360.000000>;
				turn leg1 to z-axis <0.000000> speed <360.000000>;
				turn leg2 to z-axis <0.000000> speed <360.000000>;
				turn leg3 to z-axis <0.000000> speed <360.000000>;
				turn leg4 to z-axis <0.000000> speed <360.000000>;
			}
		}
		if( !moving )
		{
			if( justmoved )
			{
				turn leg1 to x-axis <0.000000> speed <360.000000>;
				turn leg2 to x-axis <0.000000> speed <360.000000>;
				turn leg3 to x-axis <0.000000> speed <360.000000>;
				turn leg4 to x-axis <0.000000> speed <360.000000>;
				turn leg1 to y-axis <45.000000> speed <360.000000>;
				turn leg2 to y-axis <-45.000000> speed <360.000000>;
				turn leg3 to y-axis <45.000000> speed <360.000000>;
				turn leg4 to y-axis <-45.000000> speed <360.000000>;
			
				turn leg1 to z-axis <0.000000> speed <360.000000>;
				turn leg2 to z-axis <0.000000> speed <360.000000>;
				turn leg3 to z-axis <0.000000> speed <360.000000>;
				turn leg4 to z-axis <0.000000> speed <360.000000>;
				turn hips to z-axis <0.000000> speed <260.000000>;
				turn hips to x-axis <0.000000> speed <360.000000>;
	
				move hips to x-axis [0.000000] speed [3.000000];
				move hips to z-axis [0.000000] speed [3.000000];

				turn bleg2 to z-axis <0.000000> speed <160.000000>;
				turn bleg4 to z-axis <0.000000> speed <160.000000>;
				turn bleg3 to z-axis <0.000000> speed <160.000000>;
				turn bleg to z-axis <0.000000> speed <160.000000>;
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

Create()
{
	bMoving = FALSE;

	start-script initJump();
	start-script MotionControl();
	start-script SmokeUnit();
	start-script setHasJump(1);
}
StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}


Killed(severity, corpsetype)
{
	explode body type SHATTER | EXPLODE_ON_HIT | BITMAP5;
	
	if( severity <= 50 )
	{
		return (1);
	}
	return (2);
}
