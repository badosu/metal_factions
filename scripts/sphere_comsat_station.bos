#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, flare, turret, launcher, lightoff,lighton,lightemit, dish,dish2,dish3,lightbase,b3,b4,b5;

static-var  lightCount;

// Signal definitions
#define SIG_AIM				2

lua_checkComsatAllowFiring() { return 0; }
lua_checkComsatLockTarget() { return 0; }

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}

Create()
{
	move lighton to y-axis [-6.000000] now;
	show lightoff;
	
	lightCount = 0;
	start-script SmokeUnit();
	return (0);
}

AimPrimary(heading, pitch, canFire)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;

	turn turret to y-axis heading speed <35.060440>;
	turn launcher to x-axis <0.000000> - pitch/2 speed <35.060440>;
	wait-for-turn turret around y-axis;
	wait-for-turn launcher around x-axis;

	// overkill prevention check
	canFire = (get GAME_FRAME) - (get WEAPON_RELOADSTATE(1)) > 0;
	if (canFire) {
		call-script lua_checkComsatAllowFiring(1,(get TARGET_ID(1)));
		canFire = get LUA1;
	}
	if (!canFire) {
		return (0);
	}
	
	return (1);
}

FirePrimary()
{
	//emit-sfx 1024 from flare;
	call-script lua_checkComsatLockTarget(get TARGET_ID(1));
	
	lightCount = 0;
	while(lightCount < 65) {
		move lightoff to y-axis [-6.000000] now;
		move lighton to y-axis [0.000000] now;
		emit-sfx 1024 from lightemit;
		sleep 70;
		move lighton to y-axis [-6.000000] now;
		move lightoff to y-axis [0.000000] now;
		sleep 90;
		lightCount = lightCount +1;
	}
	
	return (0);
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
	return (0);
}

QueryPrimary(piecenum)
{
	piecenum = flare;
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = base;
	return (0);
}

Killed(severity, corpsetype)
{
	if( severity <= 50 )
	{
		explode dish type SHATTER;
		explode lightbase type SHATTER;
		explode dish2 type SHATTER;
		explode lightoff type SHATTER;

		return (1);
	}
	explode dish type SHATTER;
	explode lightbase type SHATTER;
	explode dish2 type SHATTER;
	explode lightoff type SHATTER;
	explode b3 type SHATTER;
	explode b4 type SHATTER;
	explode b5 type SHATTER;
	return (2);
}
