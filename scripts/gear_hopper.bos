#define TAK			// This is a TAK script

#include "sfxtype.h"
#include "exptype.h"

#define SPEEDUP_FACTOR 150

#define HEADING_TOLERANCE	<28>
#define PITCH_TOLERANCE		<18>

piece  torso, lgf, rgf, hips, l_thigh, r_thigh, head, luparm, ruparm, rarm, larm, rleg, rfoot, lleg, lfoot, lgun, rgun, l1, r1, jumpback,jbl,jbr,lbjetpt,rbjetpt,jumpjets,lfjet,rfjet,lfjetpt,rfjetpt;

static-var  bMoving, bAiming, gun_1, canAim, lGunPos, rGunPos;

#include "aimhelper1.h"

// Signal definitions
#define SIG_AIM				2


#include "jumpvars.h"


showJumpGear() {
	show jumpback;
	show jbl;
	show jbr;
	show jumpjets;
	show lfjet;
	show rfjet;
}

hideJumpGear() {
	hide jumpback;
	hide jbl;
	hide jbr;
	hide jumpjets;
	hide lfjet;
	hide rfjet;
}

showJumpEffects(descending, frames) {
	if (descending) {
		emit-sfx 1024+4 from lfjetpt;
		emit-sfx 1024+4 from rfjetpt;
		emit-sfx 1024+3 from lbjetpt;
		emit-sfx 1024+3 from rbjetpt;
		if (frames == JUMP_SND_FRAMES) {
			play-sound( "jumpdesc", 1 );
		}
	} else {
		if (frames == 0 ) {
			play-sound( "jumpstart", 1 );
		} else {
			if (frames == JUMP_SND_FRAMES) {
				play-sound( "jumpasc", 1 );
			}
		}
		emit-sfx 1024+2 from lfjetpt;
		emit-sfx 1024+2 from rfjetpt;
		emit-sfx 1024+1 from lbjetpt;
		emit-sfx 1024+1 from rbjetpt;
	}
}

#include "jump.h"


walk()
{

	if (isJumping) {
		move hips to y-axis [0.000000] speed [12.500000];
		turn hips to x-axis <0.000000> speed <20.000000>;
		turn r_thigh to x-axis <0.000000> speed <200.000000>;
		turn rleg to x-axis <0.000000> speed <200.000000>;
		turn rfoot to x-axis <0.000000> speed <200.000000>;
		turn l_thigh to x-axis <0.000000> speed <200.000000>;
		turn lleg to x-axis <0.000000> speed <200.000000>;
		turn lfoot to x-axis <0.000000> speed <200.000000>;
		sleep 100;
		return;
	}

	if( bMoving && !isJumping )
	{
		move hips to y-axis [0.000000] now;
		move hips to y-axis [-0.175000] speed [3.571442] * SPEEDUP_FACTOR / 100;
		move l_thigh to y-axis [0.000000] now;
		move l_thigh to y-axis [0.175000] speed [3.571399] * SPEEDUP_FACTOR / 100;
		move r_thigh to y-axis [0.400000] now;
		move r_thigh to y-axis [0.325000] speed [1.530597] * SPEEDUP_FACTOR / 100;
		move torso to y-axis [0.000000] now;
		move torso to y-axis [-0.124994] speed [2.551001] * SPEEDUP_FACTOR / 100;
		turn hips to x-axis <7.027473> now;
		turn hips to x-axis <9.489011> speed <50.225275> * SPEEDUP_FACTOR / 100;
		turn l_thigh to x-axis <17.923077> now;
		turn l_thigh to x-axis <20.214286> speed <46.637363> * SPEEDUP_FACTOR / 100;
		turn r_thigh to x-axis <-37.978022> now;
		turn r_thigh to x-axis <-33.923077> speed <82.527473> * SPEEDUP_FACTOR / 100;
		if (!bAiming) {
			turn torso to y-axis <-9.137363> now;
			turn torso to y-axis <-7.379121> speed <35.879121> * SPEEDUP_FACTOR / 100;
		}
		turn rleg to x-axis <17.225275> now;
		turn rleg to x-axis <13.357143> speed <78.934066> * SPEEDUP_FACTOR / 100;
		turn rfoot to x-axis <-22.505495> now;
		turn rfoot to x-axis <-13.890110> speed <175.824176> * SPEEDUP_FACTOR / 100;
		turn lleg to x-axis <0.000000> now;
		turn lleg to x-axis <10.549451> speed <215.291209> * SPEEDUP_FACTOR / 100;
		turn lfoot to x-axis <-16.879121> now;
		turn lfoot to x-axis <-10.192308> speed <136.346154> * SPEEDUP_FACTOR / 100;
		sleep 49 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving && !isJumping )
	{
		move hips to y-axis [-0.350000] speed [3.571442] * SPEEDUP_FACTOR / 100;
		move l_thigh to y-axis [0.350000] speed [3.571399] * SPEEDUP_FACTOR / 100;
		move r_thigh to y-axis [0.250000] speed [1.530597] * SPEEDUP_FACTOR / 100;
		move torso to y-axis [-0.249994] speed [2.551001] * SPEEDUP_FACTOR / 100;
		turn hips to x-axis <11.956044> speed <50.225275> * SPEEDUP_FACTOR / 100;
		turn l_thigh to x-axis <22.505495> speed <46.637363> * SPEEDUP_FACTOR / 100;
		turn r_thigh to x-axis <-29.890110> speed <82.527473> * SPEEDUP_FACTOR / 100;
		if (!bAiming) {
			turn torso to y-axis <-5.626374> speed <35.879121> * SPEEDUP_FACTOR / 100;
		}
		turn rleg to x-axis <9.489011> speed <78.934066> * SPEEDUP_FACTOR / 100;
		turn rfoot to x-axis <8.780220> speed <462.879121> * SPEEDUP_FACTOR / 100;
		turn lleg to x-axis <21.093407> speed <215.291209> * SPEEDUP_FACTOR / 100;
		turn lfoot to x-axis <-3.516484> speed <136.346154> * SPEEDUP_FACTOR / 100;
		sleep 49 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving && !isJumping )
	{
		move hips to y-axis [-0.175000] speed [4.166681] * SPEEDUP_FACTOR / 100;
		move l_thigh to y-axis [0.375000] speed [0.595221] * SPEEDUP_FACTOR / 100;
		move r_thigh to y-axis [0.125000] speed [2.976178] * SPEEDUP_FACTOR / 100;
		move torso to y-axis [0.050000] speed [7.142853] * SPEEDUP_FACTOR / 100;
		turn hips to x-axis <9.313187> speed <62.791209> * SPEEDUP_FACTOR / 100;
		turn l_thigh to x-axis <7.736264> speed <351.648352> * SPEEDUP_FACTOR / 100;
		turn r_thigh to x-axis <-20.560440> speed <221.868132> * SPEEDUP_FACTOR / 100;
		if (!bAiming) {
			turn torso to y-axis <-3.681319> speed <46.038462> * SPEEDUP_FACTOR / 100;
		}
		turn rleg to x-axis <7.203297> speed <54.412088> * SPEEDUP_FACTOR / 100;
		turn rfoot to x-axis <4.390110> speed <104.648352> * SPEEDUP_FACTOR / 100;
		turn lleg to x-axis <27.956044> speed <163.258242> * SPEEDUP_FACTOR / 100;
		turn lfoot to x-axis <-10.368132> speed <163.258242> * SPEEDUP_FACTOR / 100;
		sleep 42 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving && !isJumping )
	{
		move hips to y-axis [0.000000] speed [3.888904] * SPEEDUP_FACTOR / 100;
		move l_thigh to y-axis [0.400000] speed [0.555542] * SPEEDUP_FACTOR / 100;
		move r_thigh to y-axis [0.000000] speed [2.777771] * SPEEDUP_FACTOR / 100;
		move torso to y-axis [0.350000] speed [6.666663] * SPEEDUP_FACTOR / 100;
		turn hips to x-axis <6.670330> speed <58.604396> * SPEEDUP_FACTOR / 100;
		turn l_thigh to x-axis <-7.027473> speed <328.203297> * SPEEDUP_FACTOR / 100;
		turn r_thigh to x-axis <-11.247253> speed <207.071429> * SPEEDUP_FACTOR / 100;
		if (!bAiming) {
			turn torso to y-axis <-1.758242> speed <42.978022> * SPEEDUP_FACTOR / 100;
		}
		turn rleg to x-axis <4.923077> speed <50.791209> * SPEEDUP_FACTOR / 100;
		turn rfoot to x-axis <0.000000> speed <97.670330> * SPEEDUP_FACTOR / 100;
		turn lleg to x-axis <34.813187> speed <152.379121> * SPEEDUP_FACTOR / 100;
		turn lfoot to x-axis <-17.225275> speed <152.379121> * SPEEDUP_FACTOR / 100;
		sleep 45 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving && !isJumping )
	{
		move l_thigh to y-axis [0.700000] speed [4.225348] * SPEEDUP_FACTOR / 100;
		move torso to y-axis [0.175000] speed [2.464783] * SPEEDUP_FACTOR / 100;
		turn hips to x-axis <5.093407> speed <22.280220> * SPEEDUP_FACTOR / 100;
		turn l_thigh to x-axis <-13.527473> speed <91.626374> * SPEEDUP_FACTOR / 100;
		turn r_thigh to x-axis <0.527473> speed <165.912088> * SPEEDUP_FACTOR / 100;
		if (!bAiming) {
			turn torso to y-axis <2.104396> speed <54.478022> * SPEEDUP_FACTOR / 100;
		}
		turn rfoot to x-axis <-8.082418> speed <113.912088> * SPEEDUP_FACTOR / 100;
		turn lleg to x-axis <23.560440> speed <158.489011> * SPEEDUP_FACTOR / 100;
		turn lfoot to x-axis <-12.302198> speed <69.335165> * SPEEDUP_FACTOR / 100;
		sleep 71 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving && !isJumping )
	{
		move l_thigh to y-axis [1.000000] speed [4.166663] * SPEEDUP_FACTOR / 100;
		move torso to y-axis [0.000000] speed [2.430542] * SPEEDUP_FACTOR / 100;
		turn hips to x-axis <3.516484> speed <21.967033> * SPEEDUP_FACTOR / 100;
		turn l_thigh to x-axis <-20.038462> speed <90.346154> * SPEEDUP_FACTOR / 100;
		turn r_thigh to x-axis <12.302198> speed <163.604396> * SPEEDUP_FACTOR / 100;
		if (!bAiming) {
			turn torso to y-axis <5.978022> speed <53.714286> * SPEEDUP_FACTOR / 100;
		}
		turn rfoot to x-axis <-16.170330> speed <112.324176> * SPEEDUP_FACTOR / 100;
		turn lleg to x-axis <12.302198> speed <156.280220> * SPEEDUP_FACTOR / 100;
		turn lfoot to x-axis <-7.379121> speed <68.368132> * SPEEDUP_FACTOR / 100;
		sleep 72 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving && !isJumping )
	{
		move l_thigh to y-axis [0.700000] speed [3.225806] * SPEEDUP_FACTOR / 100;
		turn hips to x-axis <5.269231> speed <18.901099> * SPEEDUP_FACTOR / 100;
		turn l_thigh to x-axis <-28.659341> speed <92.637363> * SPEEDUP_FACTOR / 100;
		turn r_thigh to x-axis <14.769231> speed <26.467033> * SPEEDUP_FACTOR / 100;
		if (!bAiming) {
			turn torso to y-axis <7.736264> speed <18.901099> * SPEEDUP_FACTOR / 100;
		}
		turn rleg to x-axis <2.456044> speed <26.467033> * SPEEDUP_FACTOR / 100;
		turn rfoot to x-axis <-16.170330> speed <0.000000> * SPEEDUP_FACTOR / 100;
		turn lleg to x-axis <14.769231> speed <26.467033> * SPEEDUP_FACTOR / 100;
		turn lfoot to x-axis <-16.703297> speed <100.192308> * SPEEDUP_FACTOR / 100;
		sleep 93 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving && !isJumping )
	{
		move l_thigh to y-axis [0.400000] speed [3.157892] * SPEEDUP_FACTOR / 100;
		turn hips to x-axis <7.027473> speed <18.505495> * SPEEDUP_FACTOR / 100;
		turn l_thigh to x-axis <-37.269231> speed <90.681319> * SPEEDUP_FACTOR / 100;
		turn r_thigh to x-axis <17.225275> speed <25.901099> * SPEEDUP_FACTOR / 100;
		if (!bAiming) {
			turn torso to y-axis <9.489011> speed <18.505495> * SPEEDUP_FACTOR / 100;
		}
		turn rleg to x-axis <0.000000> speed <25.901099> * SPEEDUP_FACTOR / 100;
		turn rfoot to x-axis <-16.170330> speed <0.000000> * SPEEDUP_FACTOR / 100;
		turn lleg to x-axis <17.225275> speed <25.901099> * SPEEDUP_FACTOR / 100;
		turn lfoot to x-axis <-26.016484> speed <98.082418> * SPEEDUP_FACTOR / 100;
		sleep 95 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving && !isJumping )
	{
		move hips to y-axis [-0.175000] speed [3.571442] * SPEEDUP_FACTOR / 100;
		move l_thigh to y-axis [0.325000] speed [1.530597] * SPEEDUP_FACTOR / 100;
		move r_thigh to y-axis [0.175000] speed [3.571399] * SPEEDUP_FACTOR / 100;
		move torso to y-axis [-0.124994] speed [2.551001] * SPEEDUP_FACTOR / 100;
		turn hips to x-axis <9.489011> speed <50.225275> * SPEEDUP_FACTOR / 100;
		turn l_thigh to x-axis <-33.401099> speed <78.934066> * SPEEDUP_FACTOR / 100;
		turn r_thigh to x-axis <19.857143> speed <53.813187> * SPEEDUP_FACTOR / 100;
		if (!bAiming) {
			turn torso to y-axis <7.560440> speed <39.467033> * SPEEDUP_FACTOR / 100;
		}
		turn rleg to x-axis <10.714286> speed <218.879121> * SPEEDUP_FACTOR / 100;
		turn rfoot to x-axis <-8.258242> speed <161.467033> * SPEEDUP_FACTOR / 100;
		turn lleg to x-axis <13.357143> speed <78.934066> * SPEEDUP_FACTOR / 100;
		turn lfoot to x-axis <-9.137363> speed <344.467033> * SPEEDUP_FACTOR / 100;
		sleep 49 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving && !isJumping )
	{
		move hips to y-axis [-0.350000] speed [3.571442] * SPEEDUP_FACTOR / 100;
		move l_thigh to y-axis [0.250000] speed [1.530597] * SPEEDUP_FACTOR / 100;
		move r_thigh to y-axis [0.350000] speed [3.571399] * SPEEDUP_FACTOR / 100;
		move torso to y-axis [-0.249994] speed [2.551001] * SPEEDUP_FACTOR / 100;
		turn hips to x-axis <11.956044> speed <50.225275> * SPEEDUP_FACTOR / 100;
		turn l_thigh to x-axis <-29.538462> speed <78.934066> * SPEEDUP_FACTOR / 100;
		turn r_thigh to x-axis <22.505495> speed <53.813187> * SPEEDUP_FACTOR / 100;
		if (!bAiming) {
			turn torso to y-axis <5.626374> speed <39.467033> * SPEEDUP_FACTOR / 100;
		}
		turn rleg to x-axis <21.445055> speed <218.879121> * SPEEDUP_FACTOR / 100;
		turn rfoot to x-axis <-0.346154> speed <161.467033> * SPEEDUP_FACTOR / 100;
		turn lleg to x-axis <9.489011> speed <78.934066> * SPEEDUP_FACTOR / 100;
		turn lfoot to x-axis <7.736264> speed <344.467033> * SPEEDUP_FACTOR / 100;
		sleep 49 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving && !isJumping )
	{
		move hips to y-axis [-0.175000] speed [3.723407] * SPEEDUP_FACTOR / 100;
		move l_thigh to y-axis [0.125000] speed [2.659546] * SPEEDUP_FACTOR / 100;
		move r_thigh to y-axis [0.375000] speed [0.531897] * SPEEDUP_FACTOR / 100;
		move torso to y-axis [0.050000] speed [6.382959] * SPEEDUP_FACTOR / 100;
		turn hips to x-axis <9.313187> speed <56.104396> * SPEEDUP_FACTOR / 100;
		turn l_thigh to x-axis <-20.390110> speed <194.527473> * SPEEDUP_FACTOR / 100;
		turn r_thigh to x-axis <7.736264> speed <314.236264> * SPEEDUP_FACTOR / 100;
		if (!bAiming) {
			turn torso to y-axis <3.868132> speed <37.401099> * SPEEDUP_FACTOR / 100;
		}
		turn rleg to x-axis <36.912088> speed <329.192308> * SPEEDUP_FACTOR / 100;
		turn rfoot to x-axis <-5.269231> speed <104.736264> * SPEEDUP_FACTOR / 100;
		turn lleg to x-axis <7.027473> speed <52.368132> * SPEEDUP_FACTOR / 100;
		turn lfoot to x-axis <3.857143> speed <82.291209> * SPEEDUP_FACTOR / 100;
		sleep 47 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving && !isJumping )
	{
		move hips to y-axis [0.000000] speed [3.645844] * SPEEDUP_FACTOR / 100;
		move l_thigh to y-axis [0.000000] speed [2.604169] * SPEEDUP_FACTOR / 100;
		move r_thigh to y-axis [0.400000] speed [0.520813] * SPEEDUP_FACTOR / 100;
		move torso to y-axis [0.350000] speed [6.250000] * SPEEDUP_FACTOR / 100;
		turn hips to x-axis <6.670330> speed <54.945055> * SPEEDUP_FACTOR / 100;
		turn l_thigh to x-axis <-11.247253> speed <190.467033> * SPEEDUP_FACTOR / 100;
		turn r_thigh to x-axis <-7.027473> speed <307.681319> * SPEEDUP_FACTOR / 100;
		if (!bAiming) {
			turn torso to y-axis <2.104396> speed <36.626374> * SPEEDUP_FACTOR / 100;
		}
		turn rleg to x-axis <52.390110> speed <322.335165> * SPEEDUP_FACTOR / 100;
		turn rfoot to x-axis <-10.192308> speed <102.560440> * SPEEDUP_FACTOR / 100;
		turn lleg to x-axis <4.571429> speed <51.280220> * SPEEDUP_FACTOR / 100;
		turn lfoot to x-axis <0.000000> speed <80.582418> * SPEEDUP_FACTOR / 100;
		sleep 48 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving && !isJumping )
	{
		move l_thigh to y-axis [0.000000] speed [0.000000] * SPEEDUP_FACTOR / 100;
		move r_thigh to y-axis [0.700000] speed [4.054047] * SPEEDUP_FACTOR / 100;
		move torso to y-axis [0.175000] speed [2.364856] * SPEEDUP_FACTOR / 100;
		turn hips to x-axis <5.093407> speed <21.379121> * SPEEDUP_FACTOR / 100;
		turn l_thigh to x-axis <0.703297> speed <161.560440> * SPEEDUP_FACTOR / 100;
		turn r_thigh to x-axis <-13.714286> speed <90.280220> * SPEEDUP_FACTOR / 100;
		if (!bAiming) {
			turn torso to y-axis <-1.747253> speed <52.269231> * SPEEDUP_FACTOR / 100;
		}
		turn rleg to x-axis <39.027473> speed <180.571429> * SPEEDUP_FACTOR / 100;
		turn rfoot to x-axis <-7.203297> speed <40.390110> * SPEEDUP_FACTOR / 100;
		turn lleg to x-axis <4.390110> speed <2.368132> * SPEEDUP_FACTOR / 100;
		turn lfoot to x-axis <-8.082418> speed <109.291209> * SPEEDUP_FACTOR / 100;
		sleep 74 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving && !isJumping )
	{
		move l_thigh to y-axis [0.000000] speed [0.000000] * SPEEDUP_FACTOR / 100;
		move r_thigh to y-axis [1.000000] speed [3.947345] * SPEEDUP_FACTOR / 100;
		move torso to y-axis [0.000000] speed [2.302631] * SPEEDUP_FACTOR / 100;
		turn hips to x-axis <3.516484> speed <20.813187> * SPEEDUP_FACTOR / 100;
		turn l_thigh to x-axis <12.659341> speed <157.313187> * SPEEDUP_FACTOR / 100;
		turn r_thigh to x-axis <-20.390110> speed <87.912088> * SPEEDUP_FACTOR / 100;
		if (!bAiming) {
			turn torso to y-axis <-5.626374> speed <50.890110> * SPEEDUP_FACTOR / 100;
		}
		turn rleg to x-axis <25.659341> speed <175.824176> * SPEEDUP_FACTOR / 100;
		turn rfoot to x-axis <-4.214286> speed <39.324176> * SPEEDUP_FACTOR / 100;
		turn lleg to x-axis <4.214286> speed <2.313187> * SPEEDUP_FACTOR / 100;
		turn lfoot to x-axis <-16.170330> speed <106.412088> * SPEEDUP_FACTOR / 100;
		sleep 76 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving && !isJumping )
	{
		move l_thigh to y-axis [0.000000] speed [0.000000] * SPEEDUP_FACTOR / 100;
		move r_thigh to y-axis [0.700000] speed [3.191486] * SPEEDUP_FACTOR / 100;
		turn hips to x-axis <5.269231> speed <18.703297> * SPEEDUP_FACTOR / 100;
		turn l_thigh to x-axis <15.291209> speed <28.049451> * SPEEDUP_FACTOR / 100;
		turn r_thigh to x-axis <-29.181319> speed <93.516484> * SPEEDUP_FACTOR / 100;
		if (!bAiming) {
			turn torso to y-axis <-7.379121> speed <18.703297> * SPEEDUP_FACTOR / 100;
		}
		turn rleg to x-axis <21.445055> speed <44.890110> * SPEEDUP_FACTOR / 100;
		turn rfoot to x-axis <-12.302198> speed <86.038462> * SPEEDUP_FACTOR / 100;
		turn lleg to x-axis <2.104396> speed <22.445055> * SPEEDUP_FACTOR / 100;
		turn lfoot to x-axis <-16.527473> speed <3.736264> * SPEEDUP_FACTOR / 100;
		sleep 94 * 100 / SPEEDUP_FACTOR;
	}
	//sleep 94;
}


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}



MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = bAiming;

		if( moving )
		{
			call-script walk();
			justmoved = TRUE;
		}
		if( !moving )
		{
			if( justmoved )
			{
				move r_thigh to y-axis [0.000000] speed [10.000000];
				move l_thigh to y-axis [0.000000] speed [10.000000];
				turn r_thigh to x-axis <0.000000> speed <200.038462>;
				turn rleg to x-axis <0.000000> speed <200.038462>;
				turn rfoot to x-axis <0.000000> speed <200.038462>;
				turn l_thigh to x-axis <0.000000> speed <200.038462>;
				turn lleg to x-axis <0.000000> speed <200.038462>;
				turn lfoot to x-axis <0.000000> speed <200.038462>;
				turn hips to x-axis <0.000000> speed <200.038462>;
				if( !aiming )
				{
					turn torso to y-axis <0.000000> speed <90.016484>;
					turn rarm to x-axis <0.000000> speed <200.038462>;
					turn ruparm to x-axis <0.000000> speed <200.038462>;
					turn larm to x-axis <0.000000> speed <200.038462>;
					turn luparm to x-axis <0.000000> speed <200.038462>;
				}
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

Create()
{
	hide lgf;
	hide rgf;
	bMoving = FALSE;
	bAiming = FALSE;
	canAim = TRUE;
	gun_1 = 0;
	lGunPos = 0;
	rGunPos = 0;
	call-script stopAimHelper1(<1000>,<1000>);
	start-script initJump();
	start-script MotionControl();
	start-script SmokeUnit();
	start-script setHasJump(1);
}
StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

RestoreAfterDelay()
{
	sleep DEFAULT_WEAPON_RESTORE_DELAY;
	call-script stopAimHelper1(<100>,<100>);
	turn torso to y-axis <0.000000> speed <100.016484>;
	turn ruparm to x-axis <0.000000> speed <100.005495>;
	turn rarm to y-axis <0.000000> speed <100.005495>;
	turn luparm to x-axis <0.000000> speed <100.005495>;
	wait-for-turn torso around y-axis;
	wait-for-turn ruparm around x-axis;
	wait-for-turn rarm around y-axis;
	wait-for-turn luparm around x-axis;
	bAiming = FALSE;
}

AimFromPrimary(piecenum)
{
	piecenum = torso;
}

QueryPrimary(piecenum)
{
	if( gun_1 == 0 )
	{
		piecenum = lgf;
		return;
	}
	if( gun_1 == 1 )
	{
		piecenum = rgf;
		return;
	}
}

Shot1()
{
	if( gun_1 == 0 )
	{
		emit-sfx 1024 from lgf;
		sleep 100;
		gun_1 = 1;
		if (lGunPos == 0) 
		{
			turn lgun to z-axis <120.000000> speed <720.000000>;
		} 
		else if (lGunPos == 1) 
		{
			turn lgun to z-axis <240.000000> speed <720.000000>;
		} 
		else if (lGunPos == 2) 
		{
			turn lgun to z-axis <360.000000> speed <720.000000>;
		} 
		lGunPos = lGunPos+1;
		if (lGunPos > 2) 
		{
			lGunPos = 0;	
		}
		return 0;
	}
	if( gun_1 == 1 )
	{
		emit-sfx 1024 from rgf;
		sleep 100;
		gun_1 = 0;
		if (rGunPos == 0) 
		{
			turn rgun to z-axis <120.000000> speed <720.000000>;
		} 
		else if (rGunPos == 1) 
		{
			turn rgun to z-axis <240.000000> speed <720.000000>;
		} 
		else if (rGunPos == 2) 
		{
			turn rgun to z-axis <360.000000> speed <720.000000>;
		} 
		rGunPos = rGunPos+1;
		if (rGunPos > 2) 
		{
			rGunPos = 0;	
		}

		return 0;
	}
}

AimPrimary(heading, pitch)
{
	call-script updateAimHelper1(heading,pitch,<430>,<430>,HEADING_TOLERANCE,PITCH_TOLERANCE);
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	
	bAiming = TRUE;
	turn torso to y-axis heading speed <430.027473>;
	turn ruparm to x-axis <0.000000> - (pitch / 2) speed <430.038462>;
	turn luparm to x-axis <0.000000> - (pitch / 2) speed <430.038462>;
	turn rarm to x-axis <0.000000> speed <430.038462>;
	turn larm to x-axis <0.000000> speed <430.038462>;
	if (!aimReady1)
	{
		wait-for-turn torso around y-axis;
		wait-for-turn luparm around x-axis;
		wait-for-turn ruparm around x-axis;
		wait-for-turn larm around x-axis;
		wait-for-turn rarm around x-axis;
	}
	start-script RestoreAfterDelay();
	return (1);
}

Killed(severity, corpsetype)
{
	explode torso type SHATTER | EXPLODE_ON_HIT | BITMAP5;
	
	if( severity <= 50 )
	{
		return (1);
	}
	return (2);
}
