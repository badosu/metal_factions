#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base,dish,dish2,front,bottom,b2,d2;

static-var  bMoving, Static_Var_2;

// Signal definitions
#define SIG_ACTIVATE			2



SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from dish;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}

Create()
{
	bMoving = FALSE;
	Static_Var_2 = 1000;
	start-script SmokeUnit();
	return (0);
}

Activate()
{
	signal SIG_ACTIVATE;
	set-signal-mask SIG_ACTIVATE;
	spin dish around y-axis speed <200.021978>;
	return (0);
}

Deactivate()
{
	signal SIG_ACTIVATE;
	set-signal-mask SIG_ACTIVATE;
	turn dish to y-axis <0.000000> speed <100.000000>;
	return (0);
}

StartMoving()
{
	bMoving = TRUE;
	return (0);
}

StopMoving()
{
	bMoving = FALSE;
	return (0);
}

RestoreAfterDelay()
{
	sleep Static_Var_2;
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = dish;
	return (0);
}

Killed(severity, corpsetype)
{
	corpsetype = 3;
	explode front type SHATTER | EXPLODE_ON_HIT | BITMAP4;
	explode bottom type SHATTER | EXPLODE_ON_HIT | BITMAP4;
	explode b2 type SHATTER | EXPLODE_ON_HIT | BITMAP4;
	explode d2 type SHATTER | EXPLODE_ON_HIT | BITMAP4;
	explode dish2 type SHATTER | EXPLODE_ON_HIT | BITMAP4;
	return (0);
}
