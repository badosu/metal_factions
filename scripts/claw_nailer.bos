#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, rflare,lflare, gun, launcher, floatbase, fb1, center,rl,ll;

static-var gun_1;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	gun_1 = 0;
	start-script SmokeUnit();
}

RestoreAfterDelay()
{
	sleep DEFAULT_WEAPON_RESTORE_DELAY;
	turn gun to y-axis <0> speed <80.000000>;
	turn launcher to x-axis <0> speed <80.000000>;
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	turn gun to y-axis heading speed <120.000000>;
	turn launcher to x-axis <0> - pitch speed <120.000000>;
	wait-for-turn gun around y-axis;
	wait-for-turn launcher around y-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimFromPrimary(piecenum)
{
	piecenum = gun;
}

QueryPrimary(piecenum)
{
	if (gun_1 == 0) {
		piecenum = lflare;
	} else {
		piecenum = rflare;
	}
	return (0);
}

FirePrimary()
{
	if (gun_1 == 0) {
		emit-sfx 1024+0 from lflare;
		sleep 100;
		gun_1 = 1;
	} else {
		emit-sfx 1024+0 from rflare;
		sleep 100;
		gun_1 = 0;
	}
	return (0);
}


Killed(severity, corpsetype)
{
	if( severity <= 50 )
	{
		explode gun type SHATTER;
		explode fb1 type SHATTER;
		explode center type SHATTER;
		return (1);
	}
	explode gun type SHATTER;
	explode fb1 type SHATTER;
	explode center type SHATTER;
	return (2);
}
