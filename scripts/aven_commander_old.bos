#define TAK			// This is a TAK script

#include "sfxtype.h"
#include "exptype.h"

#define SPEEDUP_FACTOR 155
#define RESTORE_DELAY	3000

piece  torso, ruparm, luparm, rbigflash, nanospray, pelvis, lfirept, head,
       lthigh, rthigh, nanolath, biggun, rleg, lleg, torpgun,torpedo, lfirept2, tp2;

static-var  bMoving, bBuilding, bDgunning,bAiming, Static_Var_6, bUnderwater, canAim1, canAim2;

// signal definition
#define SIG_AIM		2

Sing()
{
	Static_Var_6 = Rand( 0, 9 );
	if( Static_Var_6 == 0 )
	{
		play-sound( "honk", 15 );
		play-sound( "honk", 15 );
		play-sound( "honk", 15 );
		play-sound( "honk", 15 );
		play-sound( "honk", 15 );
		return (0);
	}
	if( Static_Var_6 == 1 )
	{
		play-sound( "ArmCom1", 15 );
		play-sound( "ArmCom1", 15 );
		play-sound( "ArmCom1", 15 );
		play-sound( "ArmCom1", 15 );
		play-sound( "ArmCom1", 15 );
		return (0);
	}
	if( Static_Var_6 > 1 AND Static_Var_6 < 10 )
	{
		play-sound( "sing", 15 );
		play-sound( "sing", 15 );
		play-sound( "sing", 15 );
		play-sound( "sing", 15 );
		play-sound( "sing", 15 );
		return (0);
	}
}

Build()
{
	while(TRUE)
	{
		if( bBuilding )
		{
			emit-sfx 1024 + 1 from nanospray;
		}
		sleep 100;
	}
	return;
}


checkUnderwater()
{
	var currentHeight, oldState;
	while(TRUE)
	{   
 		currentHeight = GET GROUND_WATER_HEIGHT(GET UNIT_XZ);
 		oldState = bUnderwater;
		
		// check current state
		if ( currentHeight < [-30])
 		{
 			bUnderwater = TRUE;
		
 		}
 		if (currentHeight >= [-30])
 		{
 			bUnderwater = FALSE;
 		}
 		
 		// handle state changes
 		if (oldState != bUnderwater)
 		{
			if(bUnderwater)
			{
				//hide emg stuff
				hide nanolath;
 				
				//TODO show weapon morph stuff
				sleep 10;
				
				//show torpedo stuff 			
 				move torpedo to y-axis [0.000000] now;
 				show torpgun;
 				show tp2;
 				show torpedo;
 				

				sleep 200;
				canAim1 = FALSE;
 				canAim2 = TRUE;
			}
			if(!bUnderwater)
			{
				//hide torpedo stuff
				hide torpedo;
				hide torpgun;
				hide tp2;
				move torpedo to y-axis [0.000000] now;


				//TODO show weapon morph stuff
				sleep 10;

				//show emg stuff 			
 				show nanolath;
 		
 				sleep 200;	
 				canAim1 = TRUE;
 				canAim2 = FALSE;
			}
 		}
 		
 		sleep 500;
	}
	return 0;	
}


walk()
{
	if( bMoving )
	{
		move pelvis to y-axis [-0.699997] now;
		move head to y-axis [0.000000] now;
		turn pelvis to x-axis <6.692308> now;
		turn lthigh to x-axis <-41.791209> now;
		turn rthigh to x-axis <17.593407> now;
		turn torso to y-axis <4.192308> now;
		turn ruparm to x-axis <-11.192308> now;
		turn luparm to x-axis <11.192308> now;
		turn nanolath to x-axis <-41.791209> speed <200.000000> * SPEEDUP_FACTOR / 100;
		turn biggun to x-axis <-62.593407> speed <200.000000> * SPEEDUP_FACTOR / 100;
		turn rleg to x-axis <39.390110> now;
		turn lleg to x-axis <41.791209> now;
		sleep 40 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		turn torso to y-axis <3.890110> now;
		turn ruparm to x-axis <-13.390110> now;
		turn luparm to x-axis <12.291209> now;
		sleep 40 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.599991] now;
		turn pelvis to x-axis <5.291209> now;
		turn lthigh to x-axis <-29.500000> now;
		turn rthigh to x-axis <8.791209> now;
		turn torso to y-axis <3.093407> now;
		turn ruparm to x-axis <-8.093407> now;
		turn luparm to x-axis <6.291209> now;
		turn rleg to x-axis <51.692308> now;
		turn lleg to x-axis <28.500000> now;
		sleep 100 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.299988] now;
		turn pelvis to x-axis <4.593407> now;
		turn lthigh to x-axis <-16.192308> now;
		turn rthigh to x-axis <0.000000> now;
		turn torso to y-axis <1.390110> now;
		turn ruparm to x-axis <-3.093407> now;
		turn luparm to x-axis <0.000000> now;
		turn rleg to x-axis <58.000000> now;
		turn lleg to x-axis <16.192308> now;
		sleep 90 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <3.500000> now;
		turn lthigh to x-axis <7.000000> now;
		turn rthigh to x-axis <-6.291209> now;
		turn torso to y-axis <0.000000> now;
		turn ruparm to x-axis <3.093407> now;
		turn luparm to x-axis <-6.291209> now;
		turn rleg to x-axis <44.291209> now;
		turn lleg to x-axis <5.593407> now;
		sleep 90 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.199997] now;
		turn pelvis to x-axis <4.593407> now;
		turn lthigh to x-axis <10.890110> now;
		turn rthigh to x-axis <-34.390110> now;
		turn torso to y-axis <-1.390110> now;
		turn ruparm to x-axis <6.692308> now;
		turn luparm to x-axis <-8.093407> now;
		turn rleg to x-axis <71.390110> now;
		turn lleg to x-axis <20.000000> now;
		sleep 80 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.299988] now;
		turn lthigh to x-axis <13.000000> now;
		turn rthigh to x-axis <-42.890110> now;
		turn torso to y-axis <-2.390110> now;
		turn ruparm to x-axis <8.390110> now;
		turn luparm to x-axis <-9.093407> now;
		turn rleg to x-axis <54.500000> now;
		sleep 70 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.399994] now;
		turn pelvis to x-axis <5.291209> now;
		turn lthigh to x-axis <16.890110> now;
		turn rthigh to x-axis <-48.192308> now;
		turn torso to y-axis <-3.093407> now;
		turn ruparm to x-axis <10.192308> now;
		turn luparm to x-axis <-10.192308> now;
		turn rleg to x-axis <34.390110> now;
		turn lleg to x-axis <20.000000> now;
		sleep 80 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.699997] now;
		turn pelvis to x-axis <6.692308> now;
		turn lthigh to x-axis <15.500000> now;
		turn rthigh to x-axis <-40.390110> now;
		turn torso to y-axis <-4.192308> now;
		turn ruparm to x-axis <11.192308> now;
		turn luparm to x-axis <-11.192308> now;
		turn rleg to x-axis <40.390110> now;
		turn lleg to x-axis <30.593407> now;
		sleep 40 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		turn ruparm to x-axis <13.390110> now;
		turn luparm to x-axis <-12.291209> now;
		sleep 40 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.599991] now;
		turn pelvis to x-axis <5.291209> now;
		turn lthigh to x-axis <9.500000> now;
		turn rthigh to x-axis <-34.390110> now;
		turn torso to y-axis <-3.093407> now;
		turn ruparm to x-axis <8.390110> now;
		turn luparm to x-axis <-8.390110> now;
		turn lleg to x-axis <43.890110> now;
		sleep 100 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.299988] now;
		turn pelvis to x-axis <4.593407> now;
		turn lthigh to x-axis <0.692308> now;
		turn rthigh to x-axis <-26.390110> now;
		turn torso to y-axis <-1.692308> now;
		turn ruparm to x-axis <3.093407> now;
		turn luparm to x-axis <-3.093407> now;
		turn lleg to x-axis <54.500000> now;
		sleep 90 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to x-axis <3.500000> now;
		turn lthigh to x-axis <-16.890110> now;
		turn rthigh to x-axis <3.791209> now;
		turn torso to y-axis <0.000000> now;
		turn ruparm to x-axis <-3.093407> now;
		turn luparm to x-axis <3.890110> now;
		turn rleg to x-axis <8.093407> now;
		turn lleg to x-axis <60.500000> now;
		sleep 80 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.199997] now;
		turn pelvis to x-axis <4.593407> now;
		turn lthigh to x-axis <-29.500000> now;
		turn rthigh to x-axis <10.192308> now;
		turn torso to y-axis <1.692308> now;
		turn ruparm to x-axis <-6.692308> now;
		turn luparm to x-axis <8.791209> now;

		turn rleg to x-axis <26.000000> now;
		turn lleg to x-axis <56.192308> now;
		sleep 80 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.299988] now;
		turn lthigh to x-axis <-43.890110> now;
		turn rthigh to x-axis <12.291209> now;
		turn torso to y-axis <2.390110> now;
		turn ruparm to x-axis <-7.000000> now;
		turn luparm to x-axis <9.791209> now;
		turn lleg to x-axis <55.890110> now;
		sleep 70 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{

		move pelvis to y-axis [-0.399994] now;
		turn pelvis to x-axis <5.291209> now;
		turn lthigh to x-axis <-43.890110> now;
		turn rthigh to x-axis <14.390110> now;
		turn torso to y-axis <3.093407> now;
		turn ruparm to x-axis <-8.791209> now;
		turn luparm to x-axis <10.192308> now;
		turn lleg to x-axis <25.692308> now;
		sleep 80 * 100 / SPEEDUP_FACTOR;
	}
	sleep 20;
	return;
}

walklegs()
{
	if( bMoving )
	{
		//move pelvis to y-axis [-0.699997] now;
		move head to y-axis [0.000000] now;
		//turn pelvis to x-axis <6.692308> now;
		turn lthigh to x-axis <-41.791209> now;
		turn rthigh to x-axis <17.593407> now;
		turn rleg to x-axis <39.390110> now;
		turn lleg to x-axis <41.791209> now;
		sleep 40 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		sleep 40 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		//move pelvis to y-axis [-0.599991] now;
		//turn pelvis to x-axis <5.291209> now;
		turn lthigh to x-axis <-29.500000> now;
		turn rthigh to x-axis <8.791209> now;
		turn rleg to x-axis <51.692308> now;
		turn lleg to x-axis <28.500000> now;
		sleep 100 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		//move pelvis to y-axis [-0.299988] now;
		//turn pelvis to x-axis <4.593407> now;
		turn lthigh to x-axis <-16.192308> now;
		turn rthigh to x-axis <0.000000> now;
		turn rleg to x-axis <58.000000> now;
		turn lleg to x-axis <16.192308> now;
		sleep 90 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		//move pelvis to y-axis [0.000000] now;
		//turn pelvis to x-axis <3.500000> now;
		turn lthigh to x-axis <7.000000> now;
		turn rthigh to x-axis <-6.291209> now;
		turn rleg to x-axis <44.291209> now;
		turn lleg to x-axis <5.593407> now;
		sleep 90 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		//move pelvis to y-axis [-0.199997] now;
		//turn pelvis to x-axis <4.593407> now;
		turn lthigh to x-axis <10.890110> now;
		turn rthigh to x-axis <-34.390110> now;
		turn rleg to x-axis <71.390110> now;
		turn lleg to x-axis <20.000000> now;
		sleep 80 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		//move pelvis to y-axis [-0.299988] now;
		turn lthigh to x-axis <13.000000> now;
		turn rthigh to x-axis <-42.890110> now;
		turn rleg to x-axis <54.500000> now;
		sleep 70 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		//move pelvis to y-axis [-0.399994] now;
		//turn pelvis to x-axis <5.291209> now;
		turn lthigh to x-axis <16.890110> now;
		turn rthigh to x-axis <-48.192308> now;
		turn rleg to x-axis <34.390110> now;
		turn lleg to x-axis <20.000000> now;
		sleep 80 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		//move pelvis to y-axis [-0.699997] now;
		//turn pelvis to x-axis <6.692308> now;
		turn lthigh to x-axis <15.500000> now;
		turn rthigh to x-axis <-40.390110> now;
		turn rleg to x-axis <40.390110> now;
		turn lleg to x-axis <30.593407> now;
		sleep 40 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		sleep 40 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		//move pelvis to y-axis [-0.599991] now;
		//turn pelvis to x-axis <5.291209> now;
		turn lthigh to x-axis <9.500000> now;
		turn rthigh to x-axis <-34.390110> now;
		turn lleg to x-axis <43.890110> now;
		sleep 100 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		//move pelvis to y-axis [-0.299988] now;
		//turn pelvis to x-axis <4.593407> now;
		turn lthigh to x-axis <0.692308> now;
		turn rthigh to x-axis <-26.390110> now;
		turn lleg to x-axis <54.500000> now;
		sleep 90 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		//move pelvis to y-axis [0.000000] now;
		//turn pelvis to x-axis <3.500000> now;
		turn lthigh to x-axis <-16.890110> now;
		turn rthigh to x-axis <3.791209> now;
		turn rleg to x-axis <8.093407> now;
		turn lleg to x-axis <60.500000> now;
		sleep 80 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		//move pelvis to y-axis [-0.199997] now;
		//turn pelvis to x-axis <4.593407> now;
		turn lthigh to x-axis <-29.500000> now;
		turn rthigh to x-axis <10.192308> now;
		turn rleg to x-axis <26.000000> now;
		turn lleg to x-axis <56.192308> now;
		sleep 80 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		//move pelvis to y-axis [-0.299988] now;
		turn lthigh to x-axis <-43.890110> now;
		turn rthigh to x-axis <12.291209> now;
		turn lleg to x-axis <55.890110> now;
		sleep 70 * 100 / SPEEDUP_FACTOR;
	}
	if( bMoving )
	{
		//move pelvis to y-axis [-0.399994] now;
		//turn pelvis to x-axis <5.291209> now;
		turn lthigh to x-axis <-43.890110> now;
		turn rthigh to x-axis <14.390110> now;
		turn lleg to x-axis <25.692308> now;
		sleep 80 * 100 / SPEEDUP_FACTOR;
	}
	sleep 20;
	return;
}

MotionControl()
{
	var moving, aiming, justMoved;
	justMoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = bAiming;
		if( moving )
		{
			justMoved = TRUE;
			if( aiming )
			{
				call-script walklegs();
			}
			if( !aiming )
			{
				call-script walk();
			}
		}
		if( !moving )
		{
			if( justMoved )
			{
				move pelvis to y-axis [0.000000] speed [1.000000];
				turn pelvis to x-axis <0.000000> speed <20.000000>;
				turn rthigh to x-axis <0.000000> speed <200.000000>;
				turn rleg to x-axis <0.000000> speed <200.000000>;
				turn lthigh to x-axis <0.000000> speed <200.000000>;
				turn lleg to x-axis <0.000000> speed <200.000000>;

				justMoved = FALSE;
			}
			sleep 100;
		}
	}
	return;
}

Create()
{
	hide rbigflash;
	hide lfirept;
	hide nanospray;
	hide torpgun;
	hide tp2;
	hide torpedo;
	bMoving = FALSE;
	bBuilding = FALSE;
	bDgunning = FALSE;
	bUnderwater = FALSE;
	bAiming = FALSE;
	canAim1 = TRUE;
	canAim2 = FALSE;

	start-script MotionControl();
	start-script Build();
	start-script checkUnderwater();
	return;
}

StartMoving()
{
	bMoving = TRUE;
	return;
}

StopMoving()
{
	bMoving = FALSE;
	return;
}

SweetSpot(piecenum)
{
	piecenum = torso;
	return;
}

QueryNanoPiece(piecenum)
{
	piecenum = nanospray;
	return;
}

RestorePosition()
{
	bDgunning = 0;
	sleep RESTORE_DELAY;
	turn torso to y-axis <0.000000> speed <290.000000>;
	turn ruparm to x-axis <0.000000> speed <245.000000>;
	turn luparm to x-axis <0.000000> speed <245.000000>;
	turn nanolath to x-axis <-20.791209> speed <100.000000> * SPEEDUP_FACTOR / 100;
	turn biggun to x-axis <-30.593407> speed <100.000000> * SPEEDUP_FACTOR / 100;
	wait-for-turn torso around y-axis;
	wait-for-turn ruparm around x-axis;
	wait-for-turn luparm around x-axis;
	wait-for-turn nanolath around x-axis;
	wait-for-turn biggun around x-axis;
	bAiming = FALSE;
	return;
}

AimFromPrimary(piecenum)
{
	piecenum = torso;
	return;
}

QueryPrimary(piecenum)
{
	piecenum = lfirept;
	return;
}

AimPrimary(heading, pitch)
{
	if( bDgunning || bBuilding || !canAim1)
	{
		sleep 100;
		return (0);
	}
	bAiming = TRUE;
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn torso to y-axis heading speed <300.093407>;
	turn luparm to x-axis <0.000000> - pitch - <90.000000> speed <395.000000>;
	turn nanolath to x-axis <0.000000> speed <395.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn luparm around x-axis;
	wait-for-turn nanolath around x-axis;
	start-script RestorePosition();
	return (1);
}

FirePrimary()
{
	emit-sfx 1024 + 2 from lfirept;
	return;
}


AimFromSecondary(piecenum)
{
	piecenum = torso;
	return;
}

QuerySecondary(piecenum)
{
	piecenum = lfirept2;
	return;
}

AimSecondary(heading, pitch)
{
	if( bDgunning || bBuilding || !canAim2)
	{
		sleep 100;
		return (0);
	}

	bAiming = TRUE;
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn torso to y-axis heading speed <300.093407>;
	turn luparm to x-axis <0.000000> - pitch - <90.000000> speed <395.000000>;
	turn nanolath to x-axis <0.000000> speed <395.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn luparm around x-axis;
	wait-for-turn nanolath around x-axis;
	start-script RestorePosition();
	return (1);
}

FireSecondary()
{
	move torpedo to y-axis [2.000000] now;
	sleep 1000;
	move torpedo to y-axis [0.000000] speed [6.000000];
	return;
}

AimFromTertiary(piecenum)
{
	piecenum = torso;
	return;
}

QueryTertiary(piecenum)
{
	piecenum = rbigflash;
	return;
}

AimTertiary(heading, pitch)
{
	//signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;
	//bDgunning = TRUE;
	turn torso to y-axis heading speed <300.093407>;
	turn ruparm to x-axis <0.000000> - pitch - <90.000000> speed <310.000000>;
	turn biggun to x-axis <0.000000> speed <310.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn ruparm around x-axis;
	wait-for-turn biggun around x-axis;
	start-script RestorePosition();
	return (1);
}

FireTertiary()
{
	emit-sfx 1024 + 0 from rbigflash;
	move torso to z-axis[-0.250000] speed [40.000000];
	sleep 150;
	move torso to z-axis[0.000000] speed [4.000000];
	return;
}

StartBuilding(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bBuilding = TRUE;
	bAiming = TRUE;
	turn torso to y-axis heading speed <300.093407>;
	turn luparm to x-axis <0.000000> - pitch - <90.000000> speed <350.000000>;
	turn nanolath to x-axis <0.000000> speed <395.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn luparm around x-axis;
	wait-for-turn nanolath around x-axis;
	set INBUILDSTANCE to 1;
	return;
}


StopBuilding()
{
	set INBUILDSTANCE to 0;
	bBuilding = FALSE;
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	start-script RestorePosition();
	return;
}

Killed(Func_Var_1, Func_Var_2)
{
	play-sound( "VICTORY2", 60 );
	sleep 1;
	play-sound( "VICTORY2", 60 );
	return;
}
