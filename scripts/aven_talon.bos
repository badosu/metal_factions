#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, rwing, lwing, tail, ljet, rjet, lweapon,lbarrel,lflare, rweapon, rbarrel, rflare, base2, base3, center1,center2, weapon,flare;

static-var  statechg_DesiredState, statechg_StateChanging, Static_Var_5, isFlying;


Crashing(Func_Var_1)
{
	Func_Var_1 = get HEALTH;
	if( Func_Var_1 < 0 )
	{
		Static_Var_5 = 2;
	}
}

activatescr()
{
	if( !isFlying)
	{
		sleep 500;
		isFlying = TRUE;
	}
	sleep 66;
}


deactivatescr()
{
	if( isFlying )
	{
		isFlying = FALSE;
		sleep 500;
	}
	sleep 66;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

InitState()
{
	statechg_DesiredState = 1;
	statechg_StateChanging = 0;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = 1;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script activatescr();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script deactivatescr();
			currentstate = 1;
		}
	}
	statechg_StateChanging = 0;
}


Create()
{
	isFlying = FALSE;
	call-script InitState();
	start-script SmokeUnit();
	start-script Crashing();
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

AimPrimary()
{
	if(!isFlying)
	{
		return (0);
	}
	return (1);
}

FirePrimary()
{
	emit-sfx 1024+1 from flare;
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}

AimSecondary()
{
	if(!isFlying)
	{
		return (0);
	}
	return (1);
}

FireSecondary()
{
	emit-sfx 1024 from lflare;
}

QuerySecondary(piecenum)
{
	piecenum = lflare;
}


AimTertiary()
{
	if(!isFlying)
	{
		return (0);
	}
	return (1);
}

FireTertiary()
{
	emit-sfx 1024 from rflare;
}

QueryTertiary(piecenum)
{
	piecenum = rflare;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	//start-script Crashing();

	corpsetype = 3;
	explode base2 type SHATTER | EXPLODE_ON_HIT | BITMAP5;
	explode lwing type SHATTER | EXPLODE_ON_HIT | BITMAP5;
	explode rwing type SHATTER | EXPLODE_ON_HIT | BITMAP5;
	explode base3 type SHATTER | EXPLODE_ON_HIT | BITMAP5;
}
