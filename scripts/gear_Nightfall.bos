#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, hull, turret1, sleeve1, barrela, flarea, barrelb, flareb,
       turret2, sleeve2, barrelc, flarec, barreld, flared, wake1, wake2;

static-var  gun_1, gun_2, Static_Var_3, bAiming, Static_Var_5,
            Static_Var_6;

// Signal definitions
#define SIG_AIM				2
#define SIG_AIM_2			4
#define SIG_MOVE			8


Abs(Func_Var_1)
{
	if( Func_Var_1 >= 0 )
	{
		Static_Var_5 = Func_Var_1;
	}
	else
	{
		Static_Var_5 = 0 - Func_Var_1;
	}
	return (0);
}

ProjXPW(Func_Var_1, Func_Var_2)
{
	if( Func_Var_2 < -21840 )
	{
		Static_Var_5 = Func_Var_1 * ( Func_Var_2 + 32760 ) / 10920;
	}
	else if( Func_Var_2 > 21840 )
	{
		Static_Var_5 = Func_Var_1 * ( 32760 - Func_Var_2 ) / 10920;
	}
	else if( Func_Var_2 < -10920 )
	{
		Static_Var_5 = 0 - Func_Var_1;
	}
	else if( Func_Var_2 > 10920 )
	{
		Static_Var_5 = Func_Var_1;
	}
	else
	{
		Static_Var_5 = Func_Var_1 * Func_Var_2 / 10920;
	}
	return (0);
}

ProjZPW(Func_Var_1, Func_Var_2)
{
	if( Func_Var_2 < -27300 OR Func_Var_2 > 27300 )
	{
		Static_Var_5 = 0 - Func_Var_1;
	}
	else if( Func_Var_2 > 5460 )
	{
		Static_Var_5 = Func_Var_1 * ( 16380 - Func_Var_2 ) / 10920;
	}
	else if( Func_Var_2 < -5460 )
	{
		Static_Var_5 = Func_Var_1 * ( Func_Var_2 + 16380 ) / 10920;
	}
	else
	{
		Static_Var_5 = Func_Var_1;
	}
	return (0);
}

RockZInit()
{
	Static_Var_6 = 0;
	return (0);
}

RockZ(Func_Var_1, Func_Var_2)
{
	signal 16;
	set-signal-mask 16;
	call-script ProjXPW(10920 / Func_Var_2,Func_Var_1);
	//Static_Var_6 = (Static_Var_6 + Static_Var_5);
	Static_Var_6 = (Static_Var_6 + Static_Var_5)/6;
	call-script Abs(Static_Var_6);
	while( Static_Var_5 > 91 )
	{
		turn base to z-axis Static_Var_6 speed Static_Var_5 * <0.016484>;
		wait-for-turn base around z-axis;
		Static_Var_6 = Static_Var_6 * -1 / 2;
		call-script Abs(Static_Var_6);
	}
	turn base to z-axis <0.000000> speed <0.500000> * <0.016484>;
	return (0);
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from hull;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}

Create()
{
	hide flarea;
	hide flareb;
	hide flarec;
	hide flared;
	Static_Var_3 = 3000;
	gun_1 = [0];
	gun_2 = [0];
	start-script SmokeUnit();
	call-script RockZInit();
	return (0);
}

RestoreAfterDelay()
{
	sleep Static_Var_3;
	turn turret1 to y-axis <0.000000> speed <52.500000>;
	turn sleeve1 to x-axis <0.000000> speed <30.000000>;
	turn turret2 to y-axis <0.000000> speed <52.500000>;
	turn sleeve2 to x-axis <0.000000> speed <30.000000>;
	wait-for-turn turret1 around x-axis;
	wait-for-turn sleeve1 around y-axis;
	wait-for-turn turret2 around x-axis;
	wait-for-turn sleeve2 around x-axis;
	set-signal-mask 0;
	return (0);
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	while( TRUE )
	{
		emit-sfx 2 from wake1;
		emit-sfx 2 from wake2;
		sleep 300;
	}
	return (0);
}

StopMoving()
{
	signal SIG_MOVE;
	return (0);
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn turret1 to y-axis heading speed <100.000000>;
	turn sleeve1 to x-axis <0.000000> - pitch speed <100.000000>;
	wait-for-turn turret1 around y-axis;
	wait-for-turn sleeve1 around x-axis;
	start-script RestoreAfterDelay();
	bAiming = heading;
	return (1);
}

AimSecondary(heading, pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	turn turret2 to y-axis heading speed <100.000000>;
	turn sleeve2 to x-axis <0.000000> - pitch speed <100.000000>;
	wait-for-turn turret2 around y-axis;
	wait-for-turn sleeve2 around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	start-script RockZ(-5,bAiming);
	if( gun_1 == [0] )
	{
		move barrela to z-axis [-6.250000] speed [1250.000000];
		emit-sfx 1024 + 0 from flarea;
		sleep 150;
		wait-for-move barrela along z-axis;
		move barrela to z-axis [0.000000] speed [25.000000];
		gun_1 = [1];
		return (0);
	}
	if( gun_1 == [1] )
	{
		move barrelb to z-axis [-6.250000] speed [1250.000000];
		emit-sfx 1024 + 0 from flareb;
		sleep 150;
		wait-for-move barrelb along z-axis;
		move barrelb to z-axis [0.000000] speed [25.000000];
		gun_1 = [0];
		return (0);
	}
}

FireSecondary()
{
	if( gun_2 == [0] )
	{
		move barrelc to z-axis [-6.250000] speed [1250.000000];
		emit-sfx 1024 + 0 from flarec;
		sleep 150;
		wait-for-move barrelc along z-axis;
		move barrelc to z-axis [0.000000] speed [25.000000];
		gun_2 = [1];
		return (0);
	}
	if( gun_2 == [1] )
	{
		move barreld to z-axis [-6.250000] speed [1250.000000];
		emit-sfx 1024 + 0 from flared;
		sleep 150;
		wait-for-move barreld along z-axis;
		move barreld to z-axis [0.000000] speed [25.000000];
		gun_2 = [0];
		return (0);
	}
}

AimFromPrimary(piecenum)
{
	piecenum = turret1;
	return (0);
}

AimFromSecondary(piecenum)
{
	piecenum = turret2;
	return (0);
}

QueryPrimary(piecenum)
{
	if( gun_1 == [0] )
	{
		piecenum = flarea;
	}
	if( gun_1 == [1] )
	{
		piecenum = flareb;
	}
	return (0);
}

QuerySecondary(piecenum)
{
	if( gun_2 == [0] )
	{
		piecenum = flarec;
	}
	if( gun_2 == [1] )
	{
		piecenum = flared;
	}
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = hull;
	return (0);
}

Killed(severity, corpsetype)
{
	hide flarea;
	hide flareb;
	hide flarec;
	hide flared;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode turret1 type BITMAPONLY | BITMAP1;
		explode barrela type BITMAPONLY | BITMAP2;
		explode turret2 type BITMAPONLY | BITMAP3;
		explode barrelb type BITMAPONLY | BITMAP4;
		explode hull type BITMAPONLY | BITMAP5;
		explode barrelc type BITMAPONLY | BITMAP1;
		explode barreld type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode turret1 type FALL | EXPLODE_ON_HIT | BITMAP1;
		explode barrela type FALL | EXPLODE_ON_HIT | BITMAP2;
		explode barrelb type FALL | EXPLODE_ON_HIT | BITMAP3;
		explode turret2 type FALL | EXPLODE_ON_HIT | BITMAP4;
		explode hull type BITMAPONLY | BITMAP5;
		explode barrelc type FALL | EXPLODE_ON_HIT | BITMAP1;
		explode barreld type FALL | EXPLODE_ON_HIT | BITMAP2;
		return (0);
	}
	corpsetype = 3;
	explode turret1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode barrelb type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode barrela type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode barrelc type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode turret2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode hull type BITMAPONLY | BITMAP1;
	explode barreld type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	return (0);
}
