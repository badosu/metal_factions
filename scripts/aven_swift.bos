#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, rwing, lwing, tail, jet, weapon,barrel,flare, base2, base3,jp1;

static-var  Static_Var_3, Static_Var_4, Static_Var_5, isFlying;


Crashing(Func_Var_1)
{
	Func_Var_1 = get HEALTH;
	if( Func_Var_1 < 0 )
	{
		Static_Var_5 = 2;
	}
}

activatescr()
{
	if( !isFlying)
	{
		sleep 1000;
		move weapon to y-axis [-3.000000] speed [3.000000];
		sleep 1000;
		move barrel to z-axis [-0.500000] speed [1.000000];
		sleep 500;
		isFlying = TRUE;
	}
	sleep 66;
}


deactivatescr()
{
	if( isFlying )
	{
		isFlying = FALSE;
		sleep 1000;
		move weapon to y-axis [0.000000] speed [3.000000];
		sleep 1000;
		move barrel to z-axis [0.000000] speed [1.000000];
		sleep 500;
	}
	sleep 66;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

InitState()
{
	Static_Var_3 = 1;
	Static_Var_4 = 0;
}

RequestState(requestedstate, currentstate)
{
	if( Static_Var_4 )
	{
		Static_Var_3 = requestedstate;
		return (0);
	}
	Static_Var_4 = 1;
	currentstate = Static_Var_3;
	Static_Var_3 = requestedstate;
	while( Static_Var_3 != currentstate )
	{
		if( Static_Var_3 == 0 )
		{
			call-script activatescr();
			currentstate = 0;
		}
		if( Static_Var_3 == 1 )
		{
			call-script deactivatescr();
			currentstate = 1;
		}
	}
	Static_Var_4 = 0;
}


Create()
{
	isFlying = FALSE;
	call-script InitState();
	
	start-script SmokeUnit();
	start-script Crashing();
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

AimPrimary()
{
	if(!isFlying)
	{
		return (0);
	}
	return (1);
}

FirePrimary()
{
	emit-sfx 1024 from flare;
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	//start-script Crashing();

	corpsetype = 3;
	explode base2 type SHATTER | EXPLODE_ON_HIT | BITMAP5;
	explode lwing type SHATTER | EXPLODE_ON_HIT | BITMAP5;
	explode rwing type SHATTER | EXPLODE_ON_HIT | BITMAP5;
	explode base3 type SHATTER | EXPLODE_ON_HIT | BITMAP5;
}
